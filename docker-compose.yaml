version: '3.8'

services:
  # MongoDB база данных
  mongodb:
    image: mongo:7.0
    container_name: ai_bot_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ai_chat_bot
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - bot_network

  # AI Telegram Bot
  ai_bot:
    build: .
    container_name: ai_telegram_bot
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      # Telegram Bot Token (ОБЯЗАТЕЛЬНО ЗАПОЛНИТЕ!)
      BOT_TOKEN: ${BOT_TOKEN:-your_telegram_bot_token_here}

      # OpenAI API Key (ОБЯЗАТЕЛЬНО ЗАПОЛНИТЕ!)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-your_openai_api_key_here}

      # MongoDB настройки
      MONGODB_URL: mongodb://admin:password123@mongodb:27017/ai_chat_bot?authSource=admin
      DATABASE_NAME: ai_chat_bot

      # Дополнительные настройки
      PYTHONUNBUFFERED: 1
      TZ: Europe/Moscow
    volumes:
      - ./logs:/app/logs
    networks:
      - bot_network
    # Ждем пока MongoDB полностью запустится
    command: >
      sh -c "
        echo 'Ожидание запуска MongoDB...'
        sleep 10
        python main.py
      "

  # MongoDB Express (веб-интерфейс для MongoDB) - опционально
  mongo_express:
    image: mongo-express:1.0.0
    container_name: ai_bot_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - bot_network
    profiles:
      - tools

volumes:
  mongodb_data:
    driver: local

networks:
  bot_network:
    driver: bridge